/* Core */
import { createSlice } from '@reduxjs/toolkit';

const initialState = {
    user: null,
    authToken: null,
    refreshToken: null,
    isLoggedIn: false,
    errorLoggedIn: null
}

export const userSlice = createSlice({
    name: 'user',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        userLogin: (state, action) => {
            state.isLoggedIn = true;
            state.user = action.payload.user;
            state.authToken = action.payload.authToken;
            state.refreshToken = action.payload.refreshToken;
            state.errorLoggedIn = null;
        },
        userLogout: (state, action) => {
            state.isLoggedIn = false;
            state.user = null;
            state.authToken = null;
            state.refreshToken = null;
            state.errorLoggedIn = null;
        },
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    // extraReducers: (builder) => {
    //     builder
    //         .addCase(incrementAsync.pending, (state) => {
    //             state.status = 'loading'
    //         })
    //         .addCase(incrementAsync.fulfilled, (state, action) => {
    //             state.status = 'idle'
    //             state.value += action.payload
    //         })
    // },
});

export const userReducer = userSlice.reducer;
